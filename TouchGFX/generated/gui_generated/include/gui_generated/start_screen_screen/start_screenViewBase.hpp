/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef START_SCREENVIEWBASE_HPP
#define START_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/start_screen_screen/start_screenPresenter.hpp>
#include <touchgfx/containers/CacheableContainer.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/clock/AnalogClock.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/mixins/Draggable.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class start_screenViewBase : public touchgfx::View<start_screenPresenter>
{
public:
    start_screenViewBase();
    virtual ~start_screenViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::CacheableContainer container1;
    touchgfx::TiledImage start_scr_bg_im;
    touchgfx::Draggable< touchgfx::ClickListener< touchgfx::AnalogClock > > analogClock1;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger > flexButton1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<start_screenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // START_SCREENVIEWBASE_HPP
